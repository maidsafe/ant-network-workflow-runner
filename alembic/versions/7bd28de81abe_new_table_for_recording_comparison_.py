"""new table for recording comparison results

Revision ID: 7bd28de81abe
Revises: a0e4838030a2
Create Date: 2025-05-29 22:40:29.848277

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7bd28de81abe'
down_revision = 'a0e4838030a2'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('comparison_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comparison_id', sa.Integer(), nullable=False),
    sa.Column('generic_nodes_report', sa.String(), nullable=True),
    sa.Column('full_cone_nat_nodes_report', sa.String(), nullable=True),
    sa.Column('symmetric_nat_nodes_report', sa.String(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('ended_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['comparison_id'], ['comparisons.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comparison_results_id'), 'comparison_results', ['id'], unique=False)
    op.drop_index('ix_deployments_id', table_name='deployments')
    op.drop_table('deployments')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('deployments',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('workflow_run_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('ant_version', sa.VARCHAR(), nullable=True),
    sa.Column('antnode_version', sa.VARCHAR(), nullable=True),
    sa.Column('antctl_version', sa.VARCHAR(), nullable=True),
    sa.Column('branch', sa.VARCHAR(), nullable=True),
    sa.Column('repo_owner', sa.VARCHAR(), nullable=True),
    sa.Column('chunk_size', sa.INTEGER(), nullable=True),
    sa.Column('antnode_features', sa.VARCHAR(), nullable=True),
    sa.Column('peer_cache_node_count', sa.INTEGER(), nullable=True),
    sa.Column('generic_node_count', sa.INTEGER(), nullable=False),
    sa.Column('private_node_count', sa.INTEGER(), nullable=True),
    sa.Column('downloader_count', sa.INTEGER(), nullable=True),
    sa.Column('uploader_count', sa.INTEGER(), nullable=True),
    sa.Column('peer_cache_vm_count', sa.INTEGER(), nullable=True),
    sa.Column('generic_vm_count', sa.INTEGER(), nullable=False),
    sa.Column('private_vm_count', sa.INTEGER(), nullable=True),
    sa.Column('uploader_vm_count', sa.INTEGER(), nullable=True),
    sa.Column('peer_cache_node_vm_size', sa.VARCHAR(), nullable=True),
    sa.Column('generic_node_vm_size', sa.VARCHAR(), nullable=False),
    sa.Column('private_node_vm_size', sa.VARCHAR(), nullable=True),
    sa.Column('uploader_vm_size', sa.VARCHAR(), nullable=True),
    sa.Column('evm_network_type', sa.VARCHAR(), nullable=False),
    sa.Column('rewards_address', sa.VARCHAR(), nullable=False),
    sa.Column('max_log_files', sa.INTEGER(), nullable=True),
    sa.Column('max_archived_log_files', sa.INTEGER(), nullable=True),
    sa.Column('evm_data_payments_address', sa.VARCHAR(), nullable=True),
    sa.Column('evm_payment_token_address', sa.VARCHAR(), nullable=True),
    sa.Column('evm_rpc_url', sa.VARCHAR(), nullable=True),
    sa.Column('related_pr', sa.INTEGER(), nullable=True),
    sa.Column('network_id', sa.INTEGER(), nullable=True),
    sa.Column('description', sa.VARCHAR(), nullable=True),
    sa.Column('triggered_at', sa.DATETIME(), nullable=False),
    sa.Column('run_id', sa.INTEGER(), nullable=False),
    sa.Column('full_cone_private_node_count', sa.INTEGER(), nullable=True),
    sa.Column('full_cone_private_vm_count', sa.INTEGER(), nullable=True),
    sa.Column('full_cone_nat_gateway_vm_size', sa.VARCHAR(), nullable=True),
    sa.Column('symmetric_private_node_count', sa.INTEGER(), nullable=True),
    sa.Column('symmetric_private_vm_count', sa.INTEGER(), nullable=True),
    sa.Column('symmetric_nat_gateway_vm_size', sa.VARCHAR(), nullable=True),
    sa.ForeignKeyConstraint(['workflow_run_id'], ['workflow_runs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_deployments_id', 'deployments', ['id'], unique=False)
    op.drop_index(op.f('ix_comparison_results_id'), table_name='comparison_results')
    op.drop_table('comparison_results')
    # ### end Alembic commands ### 